package ia.isola.agents;

import ia.isola.game.*;
import ia.isola.agents.BasicAgent;

public class Thanatos implements BasicAgent 
{
	public boolean move(final Isola game)
    {
		Isola game2 = game;

        try {
            while(true)
            {
            	int[] posAtual = game.getPlayerPos(game.getPlayerNumber());
            	int x = posAtual[0];
            	int y = posAtual[1];
            	
                if (checkMove(game2, game.getPlayerNumber()) == 0) break;
                else 
                	{
                		System.out.println("\tInvalid Position ("+x+", "+y+")");
                		break;
                	}
                
            }
            while(true)
            {
            	int i = 3;
            	int j = 3;
                if (game.remove(i,j)) break;
                else 
                	{
                		System.out.println("\tInvalid Square ("+i+", "+j+")");
                		break;
                	}
                
            }
            System.out.println("");
        }
        catch (NumberFormatException e) {
            System.out.println("Not a valid move!");
            return true;
        }
        catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
        
        
    }
	
	private int checkMove (Isola game, int PlayerEu)
	{
		
		//Verifica situação do jogo
		if(!game.checkCanMove(game.getPlayerNumber()))
			//Se ganhou retorna 1
			//Se perdeu retorna 2
			if(game.getPlayerNumber() == PlayerEu)
				return 2;
			else
				return 1;
		
		//Se não acabou continua o jogo
		
		//for de linhas do tabuleiro
		for(int movX = 0; movX < game.getWidth(); movX++)
		{
			//for de culunas do tabuleiro
			for(int movY = 0; movY < game.getHeight(); movY++)
			{
				//Verifica se posso andar, se puder anda e continua
				if(game.checkLegalMove(movX, movY))
				{
					//Anda pra próxima posição antes de verificar
					game.move(movX, movY);
					//for de linha
					for(int removX = 0; removX < game.getWidth(); removX++)
					{
						//for de coluna
						for(int removY = 0; removY < game.getHeight(); removY++)
						{
							//Verifica se posso retirar, se puder retira e 
							if(game.checkLegalRemoval(removX, removY))
							{
								game.remove(removX, removY);
								//se a chamada recursivo o checkMove for 1 ou 2.
							}
						}
					}
					//game.undoMove();
				}
			}
		}	
		
		
		return 0;
	}
}