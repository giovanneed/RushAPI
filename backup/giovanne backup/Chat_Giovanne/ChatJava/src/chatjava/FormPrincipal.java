
package chatjava;

import javax.jms.Destination;
import javax.jms.MessageConsumer;
import javax.jms.TextMessage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class FormPrincipal extends javax.swing.JFrame {
    private static ControlMQ messagequeue = new ControlMQ("chat");
    private static ControlMQ mqReservado = new ControlMQ("chatReservado");
    private static String Nome;
    /** Creates new form FormPrincipal */
    public FormPrincipal() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enviar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mensagens = new javax.swing.JTextArea();
        user = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        apelido = new javax.swing.JLabel();
        limpar = new javax.swing.JButton();
        sair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enviar.setText("Enviar");
        enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });

        jLabel1.setText("Mensagem");

        mensagens.setColumns(20);
        mensagens.setEditable(false);
        mensagens.setRows(5);
        jScrollPane1.setViewportView(mensagens);

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        jLabel2.setText("Destinatário:");

        jLabel3.setText("Recebidas:");

        message.setColumns(20);
        message.setRows(5);
        jScrollPane2.setViewportView(message);

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apelido, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(enviar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(limpar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sair)))))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(apelido, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enviar)
                    .addComponent(limpar)
                    .addComponent(sair))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed
        if(user.getText()!=null && !user.getText().equals("")){
            mqReservado.enviaMSG(Nome.toUpperCase(),message.getText(),user.getText().toUpperCase());
        }else{
            messagequeue.enviaMSG(Nome.toUpperCase(),message.getText(),null);
        }

        message.setText("");
    }//GEN-LAST:event_enviarActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed

                if(user.getText()!=null && !user.getText().equals("")){
           message.setText("");
        }

        message.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_limparActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed

    System.exit(0);

        // TODO add your handling code here:
    }//GEN-LAST:event_sairActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        Nome = new JOptionPane().showInputDialog("Nome do usuário").toUpperCase();
        
        final FormPrincipal form = new FormPrincipal();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                form.setVisible(true);
            }
        });
        form.apelido.setText(Nome);
        
       Runnable leitorChat = new Runnable() {

            public void run() {
                try {
                Destination dest = (Destination)messagequeue.getContext().lookup("chat");
                MessageConsumer consumer = messagequeue.getSession().createConsumer(dest);
                // Passo 5: manipulação da comunicação
                messagequeue.getConnection().start();
                while(true) {
                        System.out.println("Aguardando mensagens");
                        TextMessage message = (TextMessage)consumer.receive();
                        System.out.println(message.getText());
                        form.mensagens.append(message.getStringProperty("user")+"..:.:.."+message.getText()+"\n");
                        System.out.println("Mensagem recebida: " + message);
                    }
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(-1);
		}

            }
        };

        Runnable leitorReservado = new Runnable(){
            public void run(){
                try {
                Destination destReserv = (Destination)mqReservado.getContext().lookup("chatReservado");
                MessageConsumer consumerReserv = mqReservado.getSession().createConsumer(destReserv,"chave='"+Nome.toUpperCase()+"'");
                mqReservado.getConnection().start();
                
                while(true) {
                        System.out.println("Aguardando mensagens");
                        TextMessage message = (TextMessage)consumerReserv.receive();
                        System.out.println(message.getText());
                        form.mensagens.append(message.getStringProperty("user")+"..:.:.."+message.getText()+"\n");
                        System.out.println("Mensagem recebida: " + message);
                    }
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(-1);
		}
            }
        };

        new Thread(leitorChat).start();
        new Thread(leitorReservado).start();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apelido;
    private javax.swing.JButton enviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpar;
    private javax.swing.JTextArea mensagens;
    private javax.swing.JTextArea message;
    private javax.swing.JButton sair;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables

}
